static_resources:

  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          internal_address_config:
            cidr_ranges:
                address_prefix: 127.0.0.1
                prefix_len: 8
          use_remote_address: true
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                filename: filter.lua
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              include_attempt_count_in_response: true
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_mock
                  retry_policy:
                    retriable_status_codes: [429]
                    retry_on: retriable-status-codes
                    num_retries: 2
                    retry_priority:
                      name: envoy.retry_priorities.previous_priorities
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig
                        update_frequency: 1 # Recalculate priority load for each retry attempt
                    per_try_timeout: 5s

  clusters:
  - name: service_mock
    type: STATIC
    dns_lookup_family: V4_ONLY
    lb_subset_config:
      fallback_policy: NO_FALLBACK
      subset_selectors:
      # We create 3 subsets. Endpoints may be members of multiple sets.
      # All hosts get tagged with pt_od, PT endpoints get tagged with pt_only and OD endpoints get tagged with od_only
      - keys:
        # hosts that should be included in PT only requests (i.e. P3 traffic when it is let through)
        - pt_only
      - keys:
        # hosts that should be included in OD only requests (i.e. P2 traffic when overloaded)
        - od_only
      - keys:
        # hosts that should be included in PT/OD requests (i.e. P1 traffic and P2 traffic when not overloaded)
        - pt_od
    load_assignment:
      cluster_name: service_echo
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 3000
          metadata:
            filter_metadata:
              envoy.lb:
                pt_od: "true"
                pt_only: "true"
        priority: 0
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 3001
          metadata:
            filter_metadata:
              envoy.lb:
                pt_od: "true"
                pt_only: "true"
        priority: 1
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 3002
          metadata:
            filter_metadata:
              envoy.lb:
                pt_od: "true"
                od_only: "true"
        priority: 2
